{
    "invalid_ask_manual_question_sensor_help": {
        "desc": "Have ask_manual() return the help for sensors",
        "priority": "1",
        "method": "ask",
        "method_template": "invalid_basic",
        "response_template": "NONE",
        "args": {
            "qtype": "manual",
            "sensors_help": true
        },
        "exception": "pytan.exceptions.PytanHelp",
        "error_str": ".*Help.*"
    },
    "invalid_ask_manual_question_filter_help": {
        "desc": "Have ask_manual() return the help for filters",
        "priority": "1",
        "method": "ask",
        "method_template": "invalid_basic",
        "response_template": "NONE",
        "args": {
            "qtype": "manual",
            "filters_help": true
        },
        "exception": "pytan.exceptions.PytanHelp",
        "error_str": ".*Help.*"
    },
    "invalid_ask_manual_question_option_help": {
        "desc": "Have ask_manual() return the help for options",
        "priority": "1",
        "method": "ask",
        "method_template": "invalid_basic",
        "response_template": "NONE",
        "args": {
            "qtype": "manual",
            "options_help": true
        },
        "exception": "pytan.exceptions.PytanHelp",
        "error_str": ".*Help.*"
    },
    "invalid_ask_manual_question_bad_sensorname": {
        "desc": "Ask a question using a sensor that does not exist",
        "priority": "2",
        "method": "ask",
        "method_template": "invalid_basic",
        "response_template": "NONE",
        "args": {
            "qtype": "manual",
            "sensors": "Dweedle Dee and Dum"
        },
        "exception": "pytan.exceptions.HandlerError",
        "error_str": "No results found searching for Sensor.*"
    },
    "invalid_ask_manual_question_bad_filter": {
        "desc": "Ask a question using an invalid filter.",
        "priority": "2",
        "method": "ask",
        "method_template": "invalid_basic",
        "response_template": "NONE",
        "args": {
            "qtype": "manual",
            "sensors": "Computer name, that does not meet:little"
        },
        "exception": "pytan.exceptions.HumanParserError",
        "error_str": "Filter.*is not a valid filter!"
    },
    "invalid_ask_manual_question_too_many_parameter_blocks": {
        "desc": "Ask a question that supplies too many parameter blocks ({}).",
        "priority": "3",
        "method": "ask",
        "method_template": "invalid_basic",
        "response_template": "NONE",
        "args": {
            "qtype": "manual",
            "sensors": "Folder Name Search with RegEx Match{dirname=Program Files,regex=.*}{}"
        },
        "exception": "pytan.exceptions.HumanParserError",
        "error_str": "More than one parameter.*"
    },
    "invalid_ask_manual_question_bad_option": {
        "desc": "Ask a question using an invalid option.",
        "priority": "4",
        "method": "ask",
        "method_template": "invalid_basic",
        "response_template": "NONE",
        "args": {
            "qtype": "manual",
            "sensors": "Operating system, opt:bad"
        },
        "exception": "pytan.exceptions.HumanParserError",
        "error_str": "Option.*is not a valid option!"
    },
    "invalid_ask_manual_question_missing_parameter_split": {
        "desc": "Ask a question with parameters that are missing a splitter (=) to designate the key from value.",
        "priority": "5",
        "method": "ask",
        "method_template": "invalid_basic",
        "response_template": "NONE",
        "args": {
            "qtype": "manual",
            "sensors": "Computer Name{Dweedle}"
        },
        "exception": "pytan.exceptions.HumanParserError",
        "error_str": "Parameter.*missing key/value seperator"
    },
    "invalid_ask_parsed_question_no_picker": {
        "desc": "Ask a parsed question without supplying a picker",
        "priority": "2",
        "method": "ask",
        "method_template": "invalid_basic",
        "response_template": "NONE",
        "args": {
            "qtype": "parsed",
            "question_text": "Computer Name"
        },
        "exception": "pytan.exceptions.PickerError",
        "error_str": ".*You must supply an index.*"
    }
}
