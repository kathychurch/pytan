...CALLING: pytan.handler() with args: {'username': 'Administrator', 'record_all_requests': True, 'loglevel': 1, 'debugformat': False, 'host': '10.0.1.240', 'password': 'Tanium2015!', 'port': '443'}
...OUTPUT: handler string: PyTan v2.1.4 Handler for Session to 10.0.1.240:443, Authenticated: True, Platform Version: 6.5.314.4301
...CALLING: handler.get() with args: {'objtype': u'sensor', 'id': 381}
...CALLING: handler.delete() with args: {'objtype': u'sensor', u'name': u'Is Mac API TEST'}
...CALLING: handler.export_to_report_file() with args: {'report_dir': '/var/folders/dk/vjr1r_c53yx6k6gzp2bbt_c40000gn/T', 'export_format': 'json', 'obj': <taniumpy.object_types.sensor_list.SensorList object at 0x102b503d0>}
...CALLING: handler.create_from_json() with args {'objtype': u'sensor', 'json_file': '/var/folders/dk/vjr1r_c53yx6k6gzp2bbt_c40000gn/T/SensorList_2015_09_14-15_58_03-EDT.json'}
...OUTPUT: Type of response:  <class 'taniumpy.object_types.sensor_list.SensorList'>
...OUTPUT: print of response:
SensorList, len: 1
...CALLING: handler.export_obj() with args {'export_format': 'json', 'obj': <taniumpy.object_types.sensor_list.SensorList object at 0x102b50cd0>}
...OUTPUT: print the objects returned in JSON format:
{
  "_type": "sensors", 
  "sensor": [
    {
      "_type": "sensor", 
      "category": "Operating System", 
      "creation_time": "2015-09-14T19:57:39", 
      "delimiter": ",", 
      "description": "Returns whether the machine is a Mac.  True if so, False if not.\nExample: True", 
      "exclude_from_parse_flag": 0, 
      "hash": 2387245230, 
      "hidden_flag": 0, 
      "id": 670, 
      "ignore_case_flag": 1, 
      "last_modified_by": "Administrator", 
..trimmed for brevity..
