<?xml version="1.0" encoding="utf-8"?>
<soap:Envelope xmlns:soap="http://schemas.xmlsoap.org/soap/envelope/" soap:encodingStyle="http://schemas.xmlsoap.org/soap/encoding/">
  <soap:Body xmlns:t="urn:TaniumSOAP" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
    <t:return>
      <command>GetObject</command>
      <session>1-614-48eb82387220130c7c27652700900120850043c88b3968975115cdbd53ed3716e09a5ac3b16fa16200196f19a6c3722a360bd4bda3663c5a6ce2b91a1dd571ca</session>
      <server_version>6.5.314.4301</server_version>
      <ID></ID>
      <IDType></IDType>
      <ContextID></ContextID>
      <result_object>
        <saved_question>
          <id>1</id>
          <name>Has Tanium Standard Utilities</name>
          <question>
            <id>689</id>
            <expire_seconds>0</expire_seconds>
            <skip_lock_flag>0</skip_lock_flag>
            <expiration>2015-09-14T19:49:33</expiration>
            <user>
              <id>1</id>
              <name>Administrator</name>
            </user>
            <management_rights_group>
              <id>0</id>
            </management_rights_group>
            <saved_question>
              <id>1</id>
            </saved_question>
            <name></name>
            <query_text>Get Has Tanium Standard Utilities from all machines</query_text>
            <hidden_flag>0</hidden_flag>
            <action_tracking_flag>0</action_tracking_flag>
            <selects>
              <select>
                <sensor>
                  <id>190</id>
                  <name>Has Tanium Standard Utilities</name>
                  <hash>1782389954</hash>
                  <string_count>5</string_count>
                  <category>Tanium</category>
                  <description>Returns whether a machine has the Tanium Standard Utilities
Example: Yes</description>
                  <creation_time>2015-09-14T13:39:11</creation_time>
                  <modification_time>2015-09-14T13:39:11</modification_time>
                  <last_modified_by>Administrator</last_modified_by>
                  <queries>
                    <query>
                      <platform>Windows</platform>
                      <script>&amp;#039;========================================
&amp;#039; Has Tanium Standard Utilities
&amp;#039;========================================

&amp;#039; this action will look to see if the client has
&amp;#039; all necessary standard utilities files

Option Explicit
&amp;#039;--------------------
&amp;#039; Set These Variables
Dim strDesiredVersion,strDesiredFCIVVersion,strDesiredGrepBinaryVersion
Dim strDesiredGrepDepVersion,strGrepDepFileVersion,strGrepBinaryFileVersion

&amp;#039; a string value which is a version like
&amp;#039; 4.2.314.7111
&amp;#039; which is used to determine whether the bundle has the correct version
&amp;#039; updating the content will cause the bundle number to change and all files will
&amp;#039; be sent to the endpoint again. This is to handle the case where
&amp;#039; binary files are not versioned, such as with Yara

&amp;#039; The top line of the version file
&amp;#039;Tanium File Version: &amp;lt;version string below&amp;gt;
strDesiredVersion = &amp;quot;6.5.2.0164&amp;quot;

&amp;#039; -------------------
&amp;#039; Binaries we can version
strDesiredGrepBinaryVersion = &amp;quot;2.5.4.3331&amp;quot;
strDesiredGrepDepVersion = &amp;quot;1.12.2872.39125&amp;quot;

Dim objFSO
Dim strDirToCheck,objTextFile
Dim bHasAllLatestFiles,arrTextFilesToCheck,strFile,strVersionLine,strFileVersion
Dim strFCIVFile,strFCIVFileVersion,strGrepBinary,strGrepDep,strHandleTool,strListDLLs2
Dim strListDLLs,strStreamsTool,strAutorunsTool
Dim strYara,strYarac

Set objFSO = CreateObject(&amp;quot;Scripting.FileSystemObject&amp;quot;)

strDirToCheck = GetTaniumDir(&amp;quot;Tools\StdUtils&amp;quot;)

arrTextFilesToCheck = Array(&amp;quot;copy-to-tanium-dir-predist.vbs&amp;quot;,&amp;quot;runas-allusers-wrapper.vbs&amp;quot;,&amp;quot;ver\bundle.cfg&amp;quot;)

&amp;#039; Grep is required
strGrepBinary=strDirToCheck&amp;amp;&amp;quot;grep\bin\grep.exe&amp;quot;
strGrepDep=strDirToCheck&amp;amp;&amp;quot;grep\bin\libiconv2.dll&amp;quot;

&amp;#039;Yara binaries are required
strYara=strDirToCheck&amp;amp;&amp;quot;yara\yara&amp;quot;&amp;amp;GetBitness&amp;amp;&amp;quot;.exe&amp;quot;
strYarac=strDirToCheck&amp;amp;&amp;quot;yara\yarac&amp;quot;&amp;amp;GetBitness&amp;amp;&amp;quot;.exe&amp;quot;

bHasAllLatestFiles = True
For Each strFile In arrTextFilesToCheck
	If Not objFSO.FileExists(strDirToCheck&amp;amp;strFile) Then
		WScript.Echo &amp;quot;Missing &amp;quot; &amp;amp; strFile
		bHasAllLatestFiles = False
	End If
	If objFSO.FileExists(strDirToCheck&amp;amp;strFile) Then
		Set objTextFile = objFSO.OpenTextFile(strDirToCheck&amp;amp;strFile)
		strVersionLine = LCase(objTextFile.ReadLine()) &amp;#039; version is at top of line
		If Not InStr(strVersionLine,&amp;quot;tanium file version:&amp;quot;) &amp;gt; 0 Then &amp;#039; must have a version number in top line
			WScript.Echo strFile&amp;amp;&amp;quot; is not versioned on line 1&amp;quot;
			bHasAllLatestFiles = False
		Else &amp;#039; we have a version number, not split to check
			strFileVersion = Split(strVersionLine,&amp;quot;tanium file version:&amp;quot;)(1)
			If Trim(strFileVersion) &amp;lt;&amp;gt; Trim(strDesiredVersion) Then
				WScript.Echo strFile&amp;amp;&amp;quot; version: &amp;quot;&amp;amp;strFileVersion&amp;amp;&amp;quot;, needs: &amp;quot;&amp;amp;strDesiredVersion
				bHasAllLatestFiles = False
			End If
		End If
		objTextFile.Close
	End If
Next

&amp;#039; check a Grep dependency
If Not objFSO.FileExists(strGrepDep) Then
	WScript.Echo &amp;quot;Missing &amp;quot; &amp;amp; strGrepDep
	bHasAllLatestFiles = False
End If
If objFSO.FileExists(strGrepDep) Then

	strGrepDepFileVersion = objFSO.GetFileVersion(strGrepDep)
	If Not strGrepDepFileVersion = strDesiredGrepDepVersion Then
		bHasAllLatestFiles = False
		WScript.Echo strGrepDep &amp;amp;&amp;quot; version: &amp;quot;&amp;amp;strGrepDepFileVersion&amp;amp;&amp;quot;, needs: &amp;quot;&amp;amp;strDesiredGrepDepVersion
	End If
End If


&amp;#039; check Grep binary
If Not objFSO.FileExists(strGrepBinary) Then
	WScript.Echo &amp;quot;Missing &amp;quot; &amp;amp; strGrepBinary
	bHasAllLatestFiles = False
End If
If objFSO.FileExists(strGrepBinary) Then
	strGrepBinaryFileVersion = GetFileVersion(strGrepBinary)
	If Not strGrepBinaryFileVersion = strDesiredGrepBinaryVersion Then
		bHasAllLatestFiles = False
		WScript.Echo strGrepBinary &amp;amp;&amp;quot; version: &amp;quot;&amp;amp;strGrepBinaryFileVersion&amp;amp;&amp;quot;, needs: &amp;quot;&amp;amp;strDesiredGrepBinaryVersion
	End If
End If

If Not objFSO.FileExists(strYara) Then
	bHasAllLatestFiles = False
	WScript.Echo &amp;quot;Missing &amp;quot; &amp;amp; strYara
End If

If Not objFSO.FileExists(strYarac) Then
	bHasAllLatestFiles = False
	WScript.Echo &amp;quot;Missing &amp;quot; &amp;amp; strYarac
End If

If bHasAllLatestFiles Then
	WScript.Echo &amp;quot;Yes&amp;quot;
Else
	WScript.Echo &amp;quot;No&amp;quot;
End If

Function GetFileVersion(strPath)
	Dim objFSO
	Set objFSO = CreateObject(&amp;quot;Scripting.FileSystemObject&amp;quot;)
	If objFSO.FileExists(strPath) Then
		GetFileVersion = objFSO.GetFileVersion(strPath)
	Else
		GetFileVersion = -1
	End If
End Function &amp;#039;GetFileVersion

Function GetTaniumDir(strSubDir)
	Dim strComputer, key32path, key64path, keyPath, reg
	Dim strPath
	strComputer = &amp;quot;.&amp;quot;
	Const HKLM = &amp;amp;h80000002

	key32Path = &amp;quot;Software\Tanium\Tanium Client&amp;quot;
	key64Path = &amp;quot;Software\Wow6432Node\Tanium\Tanium Client&amp;quot;

	Set reg=GetObject(&amp;quot;winmgmts:{impersonationLevel=impersonate}!\\&amp;quot; &amp;amp; strComputer &amp;amp; &amp;quot;\root\default:StdRegProv&amp;quot;)

	If RegKeyExists(reg, HKLM, key64Path) Then
		keyPath = key64Path
	ElseIf RegKeyExists(reg, HKLM, key32Path) Then
		keyPath = key32Path
	End If

	reg.GetStringValue HKLM,keyPath,&amp;quot;Path&amp;quot;, strPath

	If strSubDir &amp;lt;&amp;gt; &amp;quot;&amp;quot; Then
		strSubDir = &amp;quot;\&amp;quot; &amp;amp; strSubDir
	End If

	Dim fso
	Set fso = WScript.CreateObject(&amp;quot;Scripting.FileSystemObject&amp;quot;)
	If fso.FolderExists(strPath) Then
		If Not fso.FolderExists(strPath &amp;amp; strSubDir) Then
			fso.CreateFolder(strPath &amp;amp; strSubDir)
		End If
		GetTaniumDir = strPath &amp;amp; strSubDir &amp;amp; &amp;quot;\&amp;quot;
	End If
End Function

Function RegKeyExists(objRegistry, sHive, sRegKey)
	Dim aValueNames, aValueTypes
	If objRegistry.EnumValues(sHive, sRegKey, aValueNames, aValueTypes) = 0 Then
		RegKeyExists = True
	Else
		RegKeyExists = False
	End If
End Function


Function GetBitness
	If Not Is64 Then
		GetBitness = &amp;quot;32&amp;quot;
	Else
		GetBitness = &amp;quot;64&amp;quot;
	End If
End Function &amp;#039;GetBitness

Function Is64
	Dim objWMIService, colItems, objItem
	Set objWMIService = GetObject(&amp;quot;winmgmts:\\.\root\CIMV2&amp;quot;)
	Set colItems = objWMIService.ExecQuery(&amp;quot;Select SystemType from Win32_ComputerSystem&amp;quot;)
	For Each objItem In colItems
		If InStr(LCase(objItem.SystemType), &amp;quot;x64&amp;quot;) &amp;gt; 0 Then
			Is64 = True
		Else
			Is64 = False
		End If
	Next
End Function &amp;#039; Is64</script>
                      <script_type>VBScript</script_type>
                    </query>
                    <query>
                      <platform>Linux</platform>
                      <script>#!/bin/sh

# THIS IS A STUB - NOT INTENDED AS FUNCTIONAL - NA
# 
# 

echo &amp;quot;N/A on Linux&amp;quot;</script>
                      <script_type>UnixShell</script_type>
                    </query>
                    <query>
                      <platform>Mac</platform>
                      <script>#!/bin/sh

# THIS IS A STUB - NOT INTENDED AS FUNCTIONAL - NA
# 
# 

echo &amp;quot;N/A on Mac&amp;quot;</script>
                      <script_type>UnixShell</script_type>
                    </query>
                    <query>
                      <platform>Solaris</platform>
                      <script>#!/bin/sh

# THIS IS A STUB - NOT INTENDED AS FUNCTIONAL - NA
# 
# 

echo &amp;quot;N/A on Solaris&amp;quot;</script>
                      <script_type>UnixShell</script_type>
                    </query>
                    <query>
                      <platform>AIX</platform>
                      <script>#!/bin/sh

# THIS IS A STUB - NOT INTENDED AS FUNCTIONAL - NA
# 
# 

echo &amp;quot;N/A on AIX&amp;quot;</script>
                      <script_type>UnixShell</script_type>
                    </query>
                  </queries>
                  <source_id>0</source_id>
                  <parameter_definition></parameter_definition>
                  <value_type>String</value_type>
                  <max_age_seconds>900</max_age_seconds>
                  <ignore_case_flag>1</ignore_case_flag>
                  <hidden_flag>0</hidden_flag>
                  <exclude_from_parse_flag>1</exclude_from_parse_flag>
                  <delimiter>,</delimiter>
                </sensor>
                <filter>
                  <operator>Less</operator>
                  <value_type>String</value_type>
                  <value></value>
                  <not_flag>0</not_flag>
                  <max_age_seconds>0</max_age_seconds>
                  <ignore_case_flag>1</ignore_case_flag>
                  <all_values_flag>0</all_values_flag>
                  <substring_flag>0</substring_flag>
                  <substring_start>0</substring_start>
                  <substring_length>0</substring_length>
                  <delimiter></delimiter>
                  <delimiter_index>0</delimiter_index>
                  <utf8_flag>0</utf8_flag>
                  <aggregation></aggregation>
                  <all_times_flag>0</all_times_flag>
                  <start_time>2001-01-01T00:00:00</start_time>
                  <end_time>2001-01-01T00:00:00</end_time>
                </filter>
              </select>
            </selects>
            <force_computer_id_flag>0</force_computer_id_flag>
          </question>
          <public_flag>1</public_flag>
          <hidden_flag>0</hidden_flag>
          <issue_seconds>120</issue_seconds>
          <issue_seconds_never_flag>0</issue_seconds_never_flag>
          <expire_seconds>600</expire_seconds>
          <sort_column>0</sort_column>
          <query_text>Get Has Tanium Standard Utilities from all machines</query_text>
          <packages>
            <package_spec>
              <id>23</id>
              <name>Distribute Tanium Standard Utilities</name>
            </package_spec>
          </packages>
          <row_count_flag>0</row_count_flag>
          <keep_seconds>0</keep_seconds>
          <archive_enabled_flag>0</archive_enabled_flag>
          <most_recent_question_id>689</most_recent_question_id>
          <user>
            <id>1</id>
            <name>Administrator</name>
          </user>
          <archive_owner></archive_owner>
          <mod_time>2015-09-14T13:39:17</mod_time>
          <mod_user>
            <name>Administrator</name>
          </mod_user>
          <action_tracking_flag>0</action_tracking_flag>
        </saved_question>
      </result_object>
      <ResultXML></ResultXML>
      <options>
        <suppress_object_list>1</suppress_object_list>
      </options>
    </t:return>
  </soap:Body>
</soap:Envelope>