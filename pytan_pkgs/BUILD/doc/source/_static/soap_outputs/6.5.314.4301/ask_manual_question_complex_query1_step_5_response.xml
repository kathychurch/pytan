<?xml version="1.0" encoding="utf-8"?>
<soap:Envelope xmlns:soap="http://schemas.xmlsoap.org/soap/envelope/" soap:encodingStyle="http://schemas.xmlsoap.org/soap/encoding/">
  <soap:Body xmlns:t="urn:TaniumSOAP" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
    <t:return>
      <command>GetObject</command>
      <session>1-697-ee21df9ffaec0f970ae4e5ca91047ec3cbd6c37ec88eaeb16852e671d08183b6cf11649dc8ebe5e3d09b4fb4b9901a7c672554499e66a259f921b3a5e260d0b6</session>
      <server_version>6.5.314.4301</server_version>
      <ID></ID>
      <IDType></IDType>
      <ContextID></ContextID>
      <result_object>
        <sensors>
          <sensor>
            <id>14</id>
            <name>Operating System</name>
            <hash>45421433</hash>
            <string_count>4</string_count>
            <category>Operating System</category>
            <description>Returns the name of the Operating System from all machines.  This name may be localized.
Example: Windows Server 2008 R2 Enterprise</description>
            <creation_time>2015-09-14T13:39:10</creation_time>
            <modification_time>2015-09-14T13:39:10</modification_time>
            <last_modified_by>Administrator</last_modified_by>
            <queries>
              <query>
                <platform>Windows</platform>
                <script>&amp;#039;========================================
&amp;#039; Operating System
&amp;#039;========================================

Set oWsh = WScript.CreateObject(&amp;quot;WScript.Shell&amp;quot;)    
Set oWshSysEnv = oWsh.Environment(&amp;quot;PROCESS&amp;quot;)    
Set objWMIService = GetObject(&amp;quot;winmgmts:\\.\root\CIMV2&amp;quot;)    
Set colItems = GetObject(&amp;quot;WinMgmts:root/cimv2&amp;quot;).ExecQuery(&amp;quot;select Caption from win32_operatingsystem&amp;quot;)    
For Each objItem In colItems       
strStrip1 = Right(ObjItem.Caption, (Len(objItem.Caption) - Instr(objItem.Caption, &amp;quot; &amp;quot;)))   
&amp;#039;strStrip2 = Right(strStrip1, (Len(strStrip1) - Instr(strStrip1, &amp;quot; &amp;quot;)))   
if Instr(strStrip1,&amp;quot;Server&amp;quot; &amp;amp; Unescape(&amp;quot;%AE&amp;quot;)) &amp;lt;&amp;gt; 0 THEN   
strOS = Replace(strStrip1,&amp;quot;Server&amp;quot; &amp;amp; Unescape(&amp;quot;%AE&amp;quot;),&amp;quot;Server&amp;quot;)   
Else   
strOS = strStrip1
End IF   
wscript.echo Trim(strOS)
Next</script>
                <script_type>VBScript</script_type>
              </query>
              <query>
                <platform>Linux</platform>
                <script>#!/bin/sh
# Detects which OS and if it is Linux then it will detect which Linux
# Distribution.

OS=`uname -s`

GetVersionFromFile()
{
    VERSION=`cat $1 | tr &amp;quot;\n&amp;quot; &amp;#039; &amp;#039; | sed s/.*VERSION.*=\ // `
}

if [ &amp;quot;${OS}&amp;quot; = &amp;quot;Darwin&amp;quot; ] ; then
    # Opps, ran on Mac instead of Linux
    OS=Mac
    OSSTR=&amp;quot;${OS} incorrect script&amp;quot;
elif [ &amp;quot;${OS}&amp;quot; = &amp;quot;Linux&amp;quot; ] ; then
    KERNEL=`uname -r`
    if [ -f /etc/redhat-release ] ; then
        DIST=&amp;#039;RedHat&amp;#039;
        PSUEDONAME=`cat /etc/redhat-release`
        REV=`cat /etc/redhat-release | sed s/.*release\ // | sed s/\ .*//`
        # just cat of redhat-release, to keep compatibility with old version
        # of sensor, but could do something different here
        OSSTR=&amp;quot;${PSUEDONAME}&amp;quot;
    elif [ -f /etc/SuSE-release ] ; then
        DIST=`cat /etc/SuSE-release | tr &amp;quot;\n&amp;quot; &amp;#039; &amp;#039;| sed s/VERSION.*//`
        REV=`cat /etc/SuSE-release | tr &amp;quot;\n&amp;quot; &amp;#039; &amp;#039; | sed s/.*=\ //`
        OSSTR=&amp;quot;${DIST}&amp;quot;
    elif [ -f /etc/lsb-release ] ; then
        # Ubuntu will use the lsb-release, but Debian should be caught by the next
        # if -- note that Ubuntu also has a /etc/debian_version
        # some other less popular distros may be caught by this too
        DIST=`awk -F= &amp;#039;/^DISTRIB_DESCRIPTION/ {print $2}&amp;#039; /etc/lsb-release| tr -d &amp;#039;&amp;quot;&amp;#039;`
        OSSTR=&amp;quot;${DIST}&amp;quot;
    elif [ -f /etc/debian_version ] ; then
        DIST=&amp;quot;Debian `cat /etc/debian_version`&amp;quot;
        OSSTR=&amp;quot;${DIST}&amp;quot;
    else 
        # Fall through, some Linux distributions we don&amp;#039;t know or that does not 
        # use lsb style names
        REV=`uname -r`
        OSSTR=&amp;quot;Linux $REV&amp;quot;
    fi
else
   # in case this is run on something else -- like Solaris or BSD ir AIX or HP-UX
   OSSTR=&amp;quot;${OS}&amp;quot;
fi

echo ${OSSTR}</script>
                <script_type>UnixShell</script_type>
              </query>
              <query>
                <platform>Mac</platform>
                <script>#!/bin/bash
name=$(sw_vers | awk -F&amp;#039;:\t&amp;#039; &amp;#039; /ProductName/ { print $2 }&amp;#039;)
version=$(sw_vers | awk -F&amp;#039;:\t&amp;#039; &amp;#039; /ProductVersion/ { print $2 }&amp;#039;)
echo $name \($version\)</script>
                <script_type>UnixShell</script_type>
              </query>
              <query>
                <platform>Solaris</platform>
                <script>#!/usr/xpg4/bin/sh
# get OS release
OS=$(uname)
REL=$(uname -r)
echo &amp;quot;$OS $REL&amp;quot;</script>
                <script_type>UnixShell</script_type>
              </query>
              <query>
                <platform>AIX</platform>
                <script>#!/bin/sh
OS=$(uname)
VER=$(oslevel)
echo &amp;quot;$OS $VER&amp;quot;</script>
                <script_type>UnixShell</script_type>
              </query>
            </queries>
            <source_id>0</source_id>
            <parameter_definition></parameter_definition>
            <value_type>String</value_type>
            <max_age_seconds>86400</max_age_seconds>
            <ignore_case_flag>1</ignore_case_flag>
            <hidden_flag>0</hidden_flag>
            <exclude_from_parse_flag>0</exclude_from_parse_flag>
            <delimiter>,</delimiter>
            <metadata>
              <item>
                <name>defined</name>
                <value>Tanium</value>
                <admin_flag>0</admin_flag>
              </item>
            </metadata>
          </sensor>
        </sensors>
      </result_object>
      <ResultXML></ResultXML>
      <options>
        <include_hidden_flag>0</include_hidden_flag>
        <suppress_object_list>1</suppress_object_list>
      </options>
    </t:return>
  </soap:Body>
</soap:Envelope>